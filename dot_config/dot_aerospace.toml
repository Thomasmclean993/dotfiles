# Aerospace supports file inclusion in its TOML config.
# Use include = ["#filepath"]
############
# Layouts  #
############
# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['exec-and-forget sketchybar']

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE'
]

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 5
    inner.vertical =   5
    outer.left =       5
    outer.bottom =     5
    outer.top =        20
    outer.right =      5

[workspace-to-monitor-force-assignment]
    C = 'main'                           #Main Monitor 
    D = 'secondary'                       #Secondary

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-f = 'fullscreen'
alt-y = ['focus right', 'join-with down', 'layout tiles horizontal']
alt-q = 'close'
alt-cmd-h = 'focus left'
alt-cmd-j = 'focus down'
alt-cmd-k = 'focus up'
alt-cmd-l = 'focus right'
alt-h = 'move left'
alt-j = 'move down'
alt-k = 'move up'
alt-l = 'move right'
alt-u = 'focus-monitor up'
alt-i = 'focus-monitor down'

 # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-c = 'workspace C' # Command  
alt-b = 'workspace B' # Browser  
alt-m = 'workspace M' # Music
alt-n = 'workspace N' # Notes, Obsidian
alt-t = 'workspace T' # Terminal
alt-d = 'workspace D' # Discord, Messages, Whatapps
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace

alt-ctrl-f = 'mode manage'
#Browser
ctrl-b = 'exec-and-forget open -a Youtube Music'

#Music 
ctrl-m = '''exec-and-forget osascript -e ' 
tell application \"Application/Youtube Music\" to activate'
'''
#Discord
ctrl-d = '''exec-and-forget osascript -e ' 
tell application "Discord"
    activate
end tell'
'''

[mode.manage.binding]
esc = ['reload-config', 'mode main']
shift-t = 'layout tiles horizontal vertical'
shift-a = 'layout accordion horizontal vertical'

shift-r = ['flatten-workspace-tree', 'mode main'] # reset layout
alt-1 = 'move-workspace-to-monitor 1'
alt-2 = 'move-workspace-to-monitor 2'
f = ['layout floating tiling', 'mode main']
1 = 'move-node-to-workspace 1'
2 = 'move-node-to-workspace 2'
3 = 'move-node-to-workspace 3'
4 = 'move-node-to-workspace 4'
5 = 'move-node-to-workspace 5'
6 = 'move-node-to-workspace 6'
7 = 'move-node-to-workspace 7'
8 = 'move-node-to-workspace 8'
9 = 'move-node-to-workspace 9'
c = 'move-node-to-workspace C' # Command
b = 'move-node-to-workspace B' # Browser  
m = 'move-node-to-workspace M' # Music
n = 'move-node-to-workspace N' # Notes, Obsidian
t = 'move-node-to-workspace T' # Terminal
d = 'move-node-to-workspace D' # Discord, Messages, Whatapps
shift-f = ['fullscreen --no-outer-gaps', 'mode main']
shift-h = ['join-with left']
shift-j = ['join-with down']
shift-k = ['join-with up']
shift-l = ['join-with right']
minus = 'resize smart -50'
equal = 'resize smart +50'
shift-c = 'resize width 2560 --window-id 24027'
shift-n = 'resize width -2560 --window-id 24027'
e = 'balance-sizes'

[[on-window-detected]]
    if.app-id = "com.vivaldi.Vivaldi"
    run = "move-node-to-workspace C"

[[on-window-detected]]
    if.app-id = "com.googlecode.iterm2"
    run = "move-node-to-workspace C"

[[on-window-detected]]
    if.app-id = "md.obsidian"
    run = ["move-node-to-workspace C"]

[[on-window-detected]]
    if.app-id = "com.hnc.Discord"
    run = ["layout tiling", "move-node-to-workspace D"]

[[on-window-detected]]
    if.app-id = "com.github.th-ch.youtube-music"
    run = "move-node-to-workspace D"

